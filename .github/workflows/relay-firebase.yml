name: Relay Firebase commits to main (fix author)

permissions:
  contents: write

on:
  push:
    branches:
      - firebase-auto

jobs:
  relay:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup git user for commits
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Load fix-author from secrets (or defaults)
        env:
          SECRET_NAME: ${{ secrets.FIX_AUTHOR_NAME }}
          SECRET_EMAIL: ${{ secrets.FIX_AUTHOR_EMAIL }}
        run: |
          if [ -z "$SECRET_NAME" ]; then SECRET_NAME="Deploy Bot"; fi
          if [ -z "$SECRET_EMAIL" ]; then SECRET_EMAIL="bot@seuprojeto.com"; fi
          echo "FIX_AUTHOR_NAME=$SECRET_NAME" >> $GITHUB_ENV
          echo "FIX_AUTHOR_EMAIL=$SECRET_EMAIL" >> $GITHUB_ENV
          echo "Will use author: $SECRET_NAME <$SECRET_EMAIL>"

      - name: Fetch remote main
        run: git fetch origin main

      - name: Collect new commits from firebase-auto
        run: |
          # commits that are in HEAD (firebase-auto) but not in origin/main
          NEW_COMMITS=$(git rev-list --reverse origin/main..HEAD)
          echo "NEW_COMMITS<<'EOF'" >> $GITHUB_ENV
          echo "$NEW_COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "Commits to process:"
          echo "$NEW_COMMITS"

      - name: Exit if no new commits
        run: |
          if [ -z "$NEW_COMMITS" ]; then
            echo "No new commits from Firebase to relay."
            exit 0
          fi

      - name: Create clean branch from origin/main
        run: git checkout -b main-clean origin/main

      - name: Cherry-pick commits and rewrite author
        run: |
          for sha in $NEW_COMMITS; do
            echo "Processing commit $sha"
            git cherry-pick --no-commit $sha
            MSG=$(git log -1 --pretty=%B $sha)
            # commit preserving message but forcing author
            git commit --author="$FIX_AUTHOR_NAME <$FIX_AUTHOR_EMAIL>" -m "$MSG"
          done

      - name: Push corrected commits to main
        run: |
          # force-with-lease para evitar sobrescrever mudan√ßas inesperadas.
          git push origin main-clean:main --force-with-lease
